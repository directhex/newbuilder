#!/bin/bash

REPO=http://download.mono-project.com/archive/3.10.0/macos-10-x86/MonoFramework-MDK-3.10.0.macos10.xamarin.x86.pkg
REPODIR=$(dirname $(realpath $0))/../repos/managed-components

error()
{
    echo "$(date "+%F@%T") :: $1" 1>&2
    exit 1
}

report()
{
    echo "$(date "+%F@%T") :: $1"
}

download()
{
	mkdir -p ${REPODIR}
	report "Downloading Xar"
	wget --quiet -O ${REPODIR}/xar.tar.gz https://xar.googlecode.com/files/xar-1.5.2.tar.gz || error "*** Could not download Xar ***"
	report "Downloading Mono MDK for Mac"
	wget --quiet -O ${REPODIR}/mono.xar ${REPO}
}

clean()
{
	pushd ${REPODIR}
	report "Deleting interstitial output"
	rm -rf	${REPODIR}/mono-mac \
		${REPODIR}/xar \
		${REPODIR}/Distribution \
		${REPODIR}/mono.pkg \
		${REPODIR}/Resources \
		${REPODIR}/Library
	popd
}

build()
{
	pushd ${REPODIR}
	if [ ! -x "${REPODIR}/xar/src/xar" ]
		then report "Building Xar"
		mkdir -p xar
		tar xf xar.tar.gz -C xar/ --strip-components=1
		pushd xar/
		./configure
		make
		popd
	fi
	report "Unpacking Mono for Mac"
	xar/src/xar -x -f mono.xar
	zcat mono.pkg/Payload | bsdcpio -i
	mv Library/Frameworks/Mono.framework/Versions/3.10.0 mono-mac
	popd
}

install()
{
	pushd ${REPODIR}
	cp -r mono-mac/lib/ironpython				../../tmp/mono/lib/
	cp -r mono-mac/lib/ironruby				../../tmp/mono/lib/
	cp -r mono-mac/lib/boo					../../tmp/mono/lib/
	cp -r mono-mac/lib/xsp					../../tmp/mono/lib/
	cp -r mono-mac/lib/mono/boo				../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/Microsoft*			../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/monodroid			../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/monotouch			../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/netcore*			../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/nuget				../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/portable*			../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/Reference*			../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/4.5/FSharp*			../../tmp/mono/lib/mono/4.5/
	cp -r mono-mac/lib/mono/4.5/Microsoft.VisualBasic.dll	../../tmp/mono/lib/mono/4.5/
	cp -r mono-mac/lib/mono/4.5/Mono.Cecil.VB*		../../tmp/mono/lib/mono/4.5/
	cp -r mono-mac/lib/mono/4.5/Mono.WebServer2.dll		../../tmp/mono/lib/mono/4.5/
	cp -r mono-mac/lib/mono/4.5/vbnc.*			../../tmp/mono/lib/mono/4.5/
	cp -r mono-mac/lib/mono/4.5/xsp4.exe			../../tmp/mono/lib/mono/4.5/
	cp -r mono-mac/lib/mono/4.0/fs*.exe			../../tmp/mono/lib/mono/4.0/
	cp -r mono-mac/lib/mono/4.0/FSharp*			../../tmp/mono/lib/mono/4.0/
	cp -r mono-mac/lib/mono/4.0/Microsoft.VisualBasic.dll	../../tmp/mono/lib/mono/4.0/
	cp -r mono-mac/lib/mono/4.0/Microsoft*FSharp.Targets	../../tmp/mono/lib/mono/4.0/
	cp -r mono-mac/lib/mono/4.0/policy*FSharp*dll		../../tmp/mono/lib/mono/4.0/
	pushd ${REPODIR}/../../tmp/mono/bin
	sed 's#@@RUNTIME@@#4.5#' ${REPODIR}/../../resources/wrapper.bat > xsp4.bat
	sed 's#@@RUNTIME@@#4.5#' ${REPODIR}/../../resources/wrapper.bat > vbnc.bat
	sed 's#@@RUNTIME@@#..\\boo#' ${REPODIR}/../../resources/wrapper.bat > booc.bat
	sed 's#@@RUNTIME@@#..\\boo#' ${REPODIR}/../../resources/wrapper.bat > booi.bat
	sed 's#@@RUNTIME@@#..\\boo#' ${REPODIR}/../../resources/wrapper.bat > booish.bat
	sed 's#@@RUNTIME@@#..\\ironpython#' ${REPODIR}/../../resources/wrapper.bat > ipy.bat
	sed 's#@@RUNTIME@@#..\\ironpython#' ${REPODIR}/../../resources/wrapper.bat > ipy64.bat
	sed 's#@@RUNTIME@@#..\\ironruby#' ${REPODIR}/../../resources/wrapper.bat > ir.bat
	sed 's#@@RUNTIME@@#..\\ironruby#' ${REPODIR}/../../resources/wrapper.bat > ir64.bat
	sed 's#@@RUNTIME@@#4.0#' ${REPODIR}/../../resources/wrapper.bat > fsharpc.bat
	sed -i 's/%~n0/fsc/' fsharpc.bat
	sed 's#@@RUNTIME@@#4.0#' ${REPODIR}/../../resources/wrapper.bat > fsharpi.bat
	sed -i 's/%~n0/fsi/' fsharpi.bat
	sed 's#@@RUNTIME@@#4.0#' ${REPODIR}/../../resources/wrapper.bat > fsharpiAnyCpu.bat
	sed -i 's/%~n0/fsiAnyCpu/' fsharpiAnyCpu.bat
	chmod a+x *.bat *.exe
	for i in ../lib/mono/boo/*.dll ../lib/mono/4.5/Mono.Cecil.VB*.dll
		do ./gacutil.bat -i $i
	done
	./gacutil.bat -i ../lib/mono/4.5/Microsoft.VisualBasic.dll
	./gacutil.bat -i ../lib/mono/4.5/xsp4.exe
	popd
	popd
}

prerequisites()
{
	which bsdcpio		2>/dev/null || error "*** bsdcpio is not in \$PATH ***"
	which wget 		2>/dev/null || error "*** wget is not in \$PATH ***"
	which xml2-config	2>/dev/null || error "*** xml2-config is not in \$PATH ***"
	if [ ! -e "/usr/include/openssl/crypto.h" ]
		then error "*** openssl-devel is not installed ***"
	fi
}

$@
