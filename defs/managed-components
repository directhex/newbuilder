#!/bin/bash

REPO=${2:-"http://download.mono-project.com/archive/3.10.0/macos-10-x86/MonoFramework-MDK-3.10.0.macos10.xamarin.x86.pkg"}
REPODIR=$(dirname $(realpath $0))/../repos/managed-components

error()
{
    echo "$(date "+%F@%T") :: $1" 1>&2
    exit 1
}

report()
{
    echo "$(date "+%F@%T") :: $1"
}

download()
{
	mkdir -p ${REPODIR}
	report "Downloading Xar"
	wget --quiet -O ${REPODIR}/xar.tar.gz https://xar.googlecode.com/files/xar-1.5.2.tar.gz || error "*** Could not download Xar ***"
	report "Downloading Mono MDK for Mac"
	wget --quiet -O ${REPODIR}/mono.xar ${REPO}
}

clean()
{
	pushd ${REPODIR}
	report "Deleting interstitial output"
	rm -rf	${REPODIR}/mono-mac \
		${REPODIR}/xar \
		${REPODIR}/Distribution \
		${REPODIR}/mono.pkg \
		${REPODIR}/Resources \
		${REPODIR}/Library
	popd
}

build()
{
	pushd ${REPODIR}
	if [ ! -x "${REPODIR}/xar/src/xar" ]
		then report "Building Xar"
		mkdir -p xar
		tar xf xar.tar.gz -C xar/ --strip-components=1
		pushd xar/
		./configure
		make
		popd
	fi
	report "Unpacking Mono for Mac"
	xar/src/xar -x -f mono.xar
	zcat mono.pkg/Payload | bsdcpio -i
	mv Library/Frameworks/Mono.framework/Versions/3.* mono-mac
	popd
}

install()
{
	pushd ${REPODIR}
	cp -r mono-mac/lib/ironpython				../../tmp/mono/lib/
	cp -r mono-mac/lib/ironruby				../../tmp/mono/lib/
	cp -r mono-mac/lib/boo					../../tmp/mono/lib/
	cp -r mono-mac/lib/xsp					../../tmp/mono/lib/
	cp -r mono-mac/lib/mono/boo				../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/Microsoft*			../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/monodroid			../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/monotouch			../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/netcore*			../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/nuget				../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/portable*			../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/Reference*			../../tmp/mono/lib/mono/
	cp -r mono-mac/lib/mono/4.5/FSharp*			../../tmp/mono/lib/mono/4.5/
	cp -r mono-mac/lib/mono/4.5/Microsoft.VisualBasic.dll	../../tmp/mono/lib/mono/4.5/
	cp -r mono-mac/lib/mono/4.5/Mono.Cecil.VB*		../../tmp/mono/lib/mono/4.5/
	cp -r mono-mac/lib/mono/4.5/Mono.WebServer2.dll		../../tmp/mono/lib/mono/4.5/
	cp -r mono-mac/lib/mono/4.5/vbnc.*			../../tmp/mono/lib/mono/4.5/
	cp -r mono-mac/lib/mono/4.5/xsp4.exe			../../tmp/mono/lib/mono/4.5/
	cp -r mono-mac/lib/mono/4.0/fs*.exe			../../tmp/mono/lib/mono/4.0/
	cp -r mono-mac/lib/mono/4.0/FSharp*			../../tmp/mono/lib/mono/4.0/
	cp -r mono-mac/lib/mono/4.0/Microsoft.VisualBasic.dll	../../tmp/mono/lib/mono/4.0/
	cp -r mono-mac/lib/mono/4.0/Microsoft*FSharp.Targets	../../tmp/mono/lib/mono/4.0/
	cp -r mono-mac/lib/mono/4.0/policy*FSharp*dll		../../tmp/mono/lib/mono/4.0/
	cp -r mono-mac/lib/mono/2.0/FSharp*			../../tmp/mono/lib/mono/2.0/
	cp -r mono-mac/lib/mono/2.0/Microsoft.VisualBasic.dll	../../tmp/mono/lib/mono/2.0/
	cp -r mono-mac/lib/mono/2.0/Mono.WebServer2.dll		../../tmp/mono/lib/mono/2.0/
	cp -r mono-mac/lib/mono/2.0/policy*FSharp*dll		../../tmp/mono/lib/mono/2.0/
	cp -r mono-mac/lib/mono/2.0/xsp2.exe			../../tmp/mono/lib/mono/2.0/
	cp -r mono-mac/bin/ir*					../../tmp/mono/bin/
	cp -r mono-mac/bin/ipy*					../../tmp/mono/bin/
	cp -r mono-mac/bin/fsharp*				../../tmp/mono/bin/
	cp -r mono-mac/bin/xsp*					../../tmp/mono/bin/
	cp -r mono-mac/bin/boo*					../../tmp/mono/bin/
	cp -r mono-mac/bin/nuget				../../tmp/mono/bin/
	rm -f ../../tmp/mono/bin/xsp
	pushd ${REPODIR}/../../tmp/mono/bin
	for i in ir ir64 irw irw64 xsp2 xsp4 booc booi booish fsharpc fsharpi nuget ipy ipy64 ipyw ipyw64
		do sed -i 's#/Library.*mono #\"\$\{BASH_SOURCE%/\*\}\"/mono #' $i
		if [ -n "$(grep -ho ' /Library.*\.exe' $i)" ]
			then EXENAME=$(basename `grep -ho ' /Library.*\.exe' $i`)
			RUNTIME=$(dirname `grep -ho ' /Library.*\.exe' $i` | sed 's#/Library.*/[0-9]\+\.[0-9]\+\.[0-9]\+/lib/##' | sed 's/^mono\//! s#^#..\\#' | sed 's#^mono/##')
			sed "s#@@RUNTIME@@#${RUNTIME}#g" ${REPODIR}/../../resources/wrapper.bat > $i.bat
			sed -i "s#@@COMMAND@@#${EXENAME}#g" $i.bat
			sed -i 's#/#\\#g' $i.bat
		fi
		sed -i 's#/Library.*/[0-9]\+\.[0-9]\+\.[0-9]\+/lib/#\$\(cygpath -w \"\$\{BASH_SOURCE%/\*\}\"/../lib/\)#g#' $i
	done
	cp xsp4 xsp
	cp xsp4.bat xsp.bat
	chmod a+x *
	for i in ../lib/mono/boo/*.dll ../lib/mono/4.5/Mono.Cecil.VB*.dll ../lib/mono/*/Microsoft.VisualBasic.dll ../lib/mono/*/xsp*.exe ../lib/mono/*/FSharp*.dll 
		do ./gacutil.bat -i $i
	done
	cp ../lib/mono/2.0/FSharp.Core.*data ../lib/mono/gac/FSharp.Core/2.3.0.0__*/
	cp ../lib/mono/4.0/FSharp.Core.*data ../lib/mono/gac/FSharp.Core/4.3.0.0__*/
	cp ../lib/mono/monodroid/FSharp.Core.*data ../lib/mono/gac/FSharp.Core/2.3.98.1__*/
	cp ../lib/mono/portable259/FSharp.Core.*data ../lib/mono/gac/FSharp.Core/3.259.3.1__*/
	cp ../lib/mono/portable47/FSharp.Core.*data ../lib/mono/gac/FSharp.Core/2.3.5.0__*/
	cp ../lib/mono/portable7/FSharp.Core.*data ../lib/mono/gac/FSharp.Core/3.3.1.0__*/
	cp ../lib/mono/portable78/FSharp.Core.*data ../lib/mono/gac/FSharp.Core/3.78.3.1__*/
	popd
	popd
}

prerequisites()
{
	which bsdcpio		2>/dev/null || error "*** bsdcpio is not in \$PATH ***"
	which wget 		2>/dev/null || error "*** wget is not in \$PATH ***"
	which xml2-config	2>/dev/null || error "*** xml2-config is not in \$PATH ***"
	if [ ! -e "/usr/include/openssl/crypto.h" ]
		then error "*** openssl-devel is not installed ***"
	fi
}

$@
